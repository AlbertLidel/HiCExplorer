language: python
sudo: false

services:
  - postgresql

cache:
  pip: true
  directories:
  - $HOME/.cache/pip

python:
  - 2.7
  #- 3.5
  #- 3.6

addons:
  apt:
    packages:
    - samtools

os:
  - linux

# Setup anaconda and build hicexplorer conda package
before_install:
  
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - export OLD_PATH=$PATH
  # we name the conda directory miniconda3, even if we are in conda2, because this is the directory in which Galaxy looks by default
  - bash miniconda.sh -b -p $HOME/miniconda3
  - export CONDA_PATH="$HOME/miniconda3/bin/"
  - export HIC_CONDA_ENV=__hicexplorer@_uv_
  - export GALAXY_RELEASE=release_17.05
  - export GALAXY_REPO=https://github.com/galaxyproject/galaxy
  - export HIC_TEST_DATA_DIR="`pwd`/hicexplorer/test/test_data/"
  - echo $HIC_TEST_DATA_DIR

  - export PATH=$CONDA_PATH:$PATH
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda install conda-build
  - conda info -a
  # Replace dep1 dep2 ... with your dependencies
  - conda build ./scripts  -c conda-forge -c bioconda
  - conda create -y -n $HIC_CONDA_ENV python=$TRAVIS_PYTHON_VERSION
  - conda create -y -n __samtools@1.3.1 samtools=1.3.1 -c bioconda
 

# Install packages
install:
  - source activate $HIC_CONDA_ENV
  - conda install --yes --file requirements.txt -c conda-forge -c bioconda
  - conda install --yes --use-local hicexplorer -c conda-forge -c bioconda
  # install HiCExplorer into the conda environment
  - hicBuildMatrix --version
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_PYTHON_VERSION" == "2.7"  ]]; then conda install -y -c bioconda configparser ; fi


# command to run tests
script:
  - conda install --yes python=$TRAVIS_PYTHON_VERSION pytest
  - py.test hicexplorer --doctest-modules


jobs:
  include:
    - stage: lint
      env:
        - LINT=1
      before_install: true
      install:
        - conda install --yes python=2.7 flake8
      script:
        - if [[ "$LINT" == "1" ]]; then flake8 . --exclude=.venv,.build,planemo_test_env,build --ignore=E501,F403,E402,F999,F405,E712 ; fi
    - stage: galaxy
      env:
        - TESTGALAXY=1
      before_install: true
      install: true
      script:
        - source activate $HIC_CONDA_ENV
        - export GALAXY_SLOTS=4
        - planemo lint ./galaxy/wrapper/
        - export HICEXPLORER_FILE_BUFFER_DIR=/dev/shm
        - if [[ "$TESTGALAXY" == "1" ]]; then planemo test --conda_dependency_resolution --no_conda_auto_init --conda_use_local --conda_ensure_channels conda-forge  --galaxy_branch "$GALAXY_RELEASE" --galaxy_source "$GALAXY_REPO" ./galaxy/wrapper/hicBuildMatrix.xml ; fi
        - if [[ "$TESTGALAXY" == "1" ]]; then planemo test --conda_dependency_resolution --no_conda_auto_init --conda_use_local --conda_ensure_channels conda-forge  --galaxy_branch "$GALAXY_RELEASE" --galaxy_source "$GALAXY_REPO" ./galaxy/wrapper/hicCorrectMatrix.xml ; fi
        - if [[ "$TESTGALAXY" == "1" ]]; then planemo test --conda_dependency_resolution --no_conda_auto_init --conda_use_local --conda_ensure_channels conda-forge  --galaxy_branch "$GALAXY_RELEASE" --galaxy_source "$GALAXY_REPO" ./galaxy/wrapper/hicCorrelate.xml ; fi
        - if [[ "$TESTGALAXY" == "1" ]]; then planemo test --conda_dependency_resolution --no_conda_auto_init --conda_use_local --conda_ensure_channels conda-forge  --galaxy_branch "$GALAXY_RELEASE" --galaxy_source "$GALAXY_REPO" ./galaxy/wrapper/hicFindEnrichedContacts.xml ; fi
        - if [[ "$TESTGALAXY" == "1" ]]; then planemo test --conda_dependency_resolution --no_conda_auto_init --conda_use_local --conda_ensure_channels conda-forge  --galaxy_branch "$GALAXY_RELEASE" --galaxy_source "$GALAXY_REPO" ./galaxy/wrapper/hicFindTADs.xml ; fi
        - if [[ "$TESTGALAXY" == "1" ]]; then planemo test --conda_dependency_resolution --no_conda_auto_init --conda_use_local --conda_ensure_channels conda-forge  --galaxy_branch "$GALAXY_RELEASE" --galaxy_source "$GALAXY_REPO" ./galaxy/wrapper/hicPlotDistVsCounts.xml ; fi
        - if [[ "$TESTGALAXY" == "1" ]]; then planemo test --conda_dependency_resolution --no_conda_auto_init --conda_use_local --conda_ensure_channels conda-forge  --galaxy_branch "$GALAXY_RELEASE" --galaxy_source "$GALAXY_REPO" ./galaxy/wrapper/hicPlotMatrix.xml ; fi
        - if [[ "$TESTGALAXY" == "1" ]]; then planemo test --conda_dependency_resolution --no_conda_auto_init --conda_use_local --conda_ensure_channels conda-forge  --galaxy_branch "$GALAXY_RELEASE" --galaxy_source "$GALAXY_REPO" ./galaxy/wrapper/hicPlotTADs.xml ; fi
        - if [[ "$TESTGALAXY" == "1" ]]; then planemo test --conda_dependency_resolution --no_conda_auto_init --conda_use_local --conda_ensure_channels conda-forge  --galaxy_branch "$GALAXY_RELEASE" --galaxy_source "$GALAXY_REPO" ./galaxy/wrapper/hicSumMatrices.xml ; fi
        - source deactivate $HIC_CONDA_ENV

